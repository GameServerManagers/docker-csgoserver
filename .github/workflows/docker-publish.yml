name: Docker Publish

on:
  workflow_dispatch:
  push:
    paths:
      - "generate-dockerfiles.yml"
      - "generate-dockerfiles.sh"
      - "requirements.txt"
      - "Dockerfile.j2"
  schedule:
    - cron: "0 3 * * 6"

jobs:
  generate-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate python
        uses: actions/setup-python@v4
        with:
          cache: "pip"
      - run: pip3 install -r requirements.txt

      - name: Generate Dockerfile with generate-dockerfiles.sh
        run: ./generate-dockerfiles.sh

      - name: Push commit
        uses: EndBug/add-and-commit@v9
        with:
          message: "Generate Dockerfiles"
          add: "dockerfiles/Dockerfile*"

      - id: set-matrix
        run: |
          shortnamearray=$(cat shortnamearray.json)
          echo "${shortnamearray}"
          echo -n "matrix=${shortnamearray}" >> $GITHUB_OUTPUT

  docker-publish:
    needs: generate-dockerfiles
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix: ${{ fromJSON(needs.generate-dockerfiles.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.8.0
      - name: Login to DockerHub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.shortname }}
          platforms: linux/amd64
          push: true
          build-args: |
            SHORTNAME=${{ matrix.shortname }}
          tags: |
            gameservermanagers/gameserver:${{ matrix.shortname }}
            ghcr.io/gameservermanagers/gameserver:${{ matrix.shortname }}
